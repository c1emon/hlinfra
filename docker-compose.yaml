version: '3'
services:
  clash:
    image: dreamacro/clash-premium
    restart: always
    cap_add:
      - NET_ADMIN
    networks:
      default:
        ipv4_address: "172.38.1.240"
    ports:
      - "7890"
      - "53"
      - "9090"
    volumes:
      - ./clash/clash-config.yaml:/root/.config/clash/config.yaml
      - ./resolvs/clash-resolv.conf:/etc/resolv.conf:ro
  # clash_dashboard:
  #   image: haishanh/yacd
  #   restart: always
  #   depends_on:
  #     - clash
  #   networks:
  #     - default
  #   ports:
  #     - "80"
  registry_k8s:
    image: registry:2.7.1
    restart: on-failure
    depends_on:
      - clash
    ports:
      - 5000
    volumes:
      - "./registry/config.yaml/:/etc/docker/registry/config.yml:ro"
      - ./resolvs/registry-resolv.conf:/etc/resolv.conf:ro
    environment:
      - http_proxy=http://172.38.1.240:7890
      - https_proxy=http://172.38.1.240:7890
      - REGISTRY_PROXY_REMOTEURL=https://k8s.gcr.io
      - REGISTRY_AUTH_HTPASSWD_REALM=token-realm
      - REGISTRY_AUTH_HTPASSWD_PATH=/run/secrets/htpasswd
    secrets:
      - htpasswd
  registry_gcr:
    image: registry:2.7.1
    restart: on-failure
    depends_on:
      - clash
    ports:
      - 5000
    volumes:
      - "./registry/config.yaml/:/etc/docker/registry/config.yml:ro"
      - ./resolvs/registry-resolv.conf:/etc/resolv.conf:ro
    environment:
      - http_proxy=http://172.38.1.240:7890
      - https_proxy=http://172.38.1.240:7890
      - REGISTRY_PROXY_REMOTEURL=https://gcr.io
      - REGISTRY_AUTH_HTPASSWD_REALM=token-realm
      - REGISTRY_AUTH_HTPASSWD_PATH=/run/secrets/htpasswd
    secrets:
      - htpasswd
  registry_ghcr:
    image: registry:2.7.1
    restart: on-failure
    depends_on:
      - clash
    ports:
      - 5000
    volumes:
      - "./registry/config.yaml/:/etc/docker/registry/config.yml:ro"
      - ./resolvs/registry-resolv.conf:/etc/resolv.conf:ro
    environment:
      - http_proxy=http://172.38.1.240:7890
      - https_proxy=http://172.38.1.240:7890
      - REGISTRY_PROXY_REMOTEURL=https://ghcr.io
      - REGISTRY_AUTH_HTPASSWD_REALM=token-realm
      - REGISTRY_AUTH_HTPASSWD_PATH=/run/secrets/htpasswd
    secrets:
      - htpasswd
  registry_quay:
    image: registry:2.7.1
    restart: on-failure
    depends_on:
      - clash
    ports:
      - 5000
    volumes:
      - "./registry/config.yaml/:/etc/docker/registry/config.yml:ro"
      - ./resolvs/registry-resolv.conf:/etc/resolv.conf:ro
    environment:
      - http_proxy=http://172.38.1.240:7890
      - https_proxy=http://172.38.1.240:7890
      - REGISTRY_PROXY_REMOTEURL=https://quay.io
      - REGISTRY_AUTH_HTPASSWD_REALM=token-realm
      - REGISTRY_AUTH_HTPASSWD_PATH=/run/secrets/htpasswd
    secrets:
      - htpasswd
  headscale:
    image: "headscale/headscale"
    container_name: "headscale"
    hostname: "headscale"
    restart: unless-stopped
    ports:
      - 443
      - 9090
      - "3478:3478/udp"
    labels:
      - "traefik.enable=true"
      # for headscale main port and derp
      - "traefik.tcp.routers.headscale.entrypoints=websecure"
      - "traefik.tcp.routers.headscale.tls.passthrough=true"
      - "traefik.tcp.routers.headscale.rule=HostSNI(`headscale.domain.example`)"
      - "traefik.tcp.services.headscale.loadbalancer.server.port=443"
      # for headscale metrics api
      - "traefik.http.routers.headscale-metrics.entrypoints=websecure"
      - "traefik.http.routers.headscale-metrics.rule=Host(`metrics.headscale.domain.example`)"
      - "traefik.http.services.headscale-metrics.loadbalancer.server.port=9090"
    volumes:
      - "./headscale/config:/etc/headscale/:ro"
      - "./headscale/data:/var/lib/headscale:rw"
    command:
      - "headscale"
      - "serve"
  traefik:
    image: "traefik"
    container_name: "traefik"
    hostname: "traefik"
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - "./traefik/acme_prod.json:/acme_prod.json:rw"
      - "./traefik/acme_stag.json:/acme_stag.json:rw"
      - "./traefik/traefik.yaml:/traefik.yml:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      

secrets:
  htpasswd:
    file: /home/clemon/volumes/registry/htpasswd
networks:
  default: {}